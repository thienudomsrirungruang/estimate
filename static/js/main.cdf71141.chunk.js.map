{"version":3,"sources":["Utils.js","GameEstimate.js","GameAnswer.js","Game.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["units","rand","x","Math","floor","random","parseUnit","s","cur","split","forEach","element","parts","length","indexOf","parseInt","arrayContains","a","b","i","arrayScalarMult","mult","c","push","GameEstimate","props","useState","answerInput","setAnswerInput","exponentInput","setExponentInput","setGameState","setAnswerProps","score","setScore","inputBox","useRef","setTopBarPercent","Date","now","startTimestamp","question","setQuestion","getExponent","exp","validateAnswer","userAnswer","lowerBound","answer","tolerance","upperBound","console","log","correct","handleInputKeyDown","e","key","pow","useEffect","quantity","gameData","quantities","unit","getUnitCombination","arrayEquals","Map","possibleUnits","xunit","j","power","subtractedUnit","arrayAdd","arrayUnaryMinus","u","factor","rf","set","value","undefined","positiveBaseUnits","negativeBaseUnits","has","get","out","name","multiplier","plural","nameUnit","current","focus","setTimeout","millis","NaN","outOfTime","id","title","ref","type","onChange","target","onKeyDown","GameAnswer","enterKeyUp","setEnterKeyUp","answerProps","downHandler","upHandler","formatNumber","number","precision","upThreshold","downThreshold","Number","toPrecision","oom","window","addEventListener","removeEventListener","className","correctAnswer","style","Game","gameState","renderWindow","TopBar","topBarStyle","width","topBarPercent","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdf71141.chunk.js","sourcesContent":["const units = [\"s\", \"m\", \"kg\", \"A\", \"K\", \"mol\", \"cd\"];\r\n\r\nexport function rand(x){\r\n    return Math.floor(Math.random() * x);\r\n}\r\n\r\nexport function parseUnit(s){\r\n    var cur = [0, 0, 0, 0, 0, 0, 0];\r\n    s.split(\" \").forEach(element => {\r\n        var parts = element.split(\"^\");\r\n        if(parts.length == 1){\r\n            cur[units.indexOf(parts[0])]++;\r\n        }\r\n        else{\r\n            cur[units.indexOf(parts[0])] += parseInt(parts[1]);\r\n        }\r\n    });\r\n    return cur;\r\n}\r\n\r\nexport function arrayEquals(a, b){\r\n    if(a.length != b.length){\r\n        return false;\r\n    }\r\n    for(var i = 0; i < a.length; i++){\r\n        if(a[i] != b[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// checks if all non-zero elements in a are also non-zero elements in b\r\nexport function arrayContains(a, b){\r\n    if(a.length != b.length){\r\n        return false;\r\n    }\r\n    for(var i = 0; i < a.length; i++){\r\n        if(a[i] != 0 && b[i] == 0){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function arrayAdd(a, b){\r\n    if(a.length != b.length){\r\n        return undefined;\r\n    }\r\n    var c = [];\r\n    for(var i = 0; i < a.length; i++){\r\n        c.push(a[i] + b[i]);\r\n    }\r\n    return c;\r\n}\r\n\r\nexport function arrayUnaryMinus(a){\r\n    var c = [];\r\n    for(var i = 0; i < a.length; i++){\r\n        c.push(-a[i]);\r\n    }\r\n    return c;\r\n}\r\n\r\nexport function arrayMinus(a, b){\r\n    return arrayAdd(a, arrayUnaryMinus(b));\r\n}\r\n\r\nexport function arrayScalarMult(a, mult){\r\n    var c = [];\r\n    for(var i = 0; i < a.length; i++){\r\n        c.push(a[i] * mult);\r\n    }\r\n    return c;\r\n}\r\n","import React from 'react';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport gameData from './gameData.json';\r\nimport './GameEstimate.css';\r\nimport {rand, parseUnit, arrayEquals, arrayContains, arrayMinus, arrayScalarMult} from './Utils.js';\r\n\r\nfunction GameEstimate(props) {\r\n    const [answerInput, setAnswerInput] = useState(\"\");\r\n    const [exponentInput, setExponentInput] = useState(\"\");\r\n\r\n    const setGameState = props.setGameState;\r\n    const setAnswerProps = props.setAnswerProps;\r\n    const score = props.score;\r\n    const setScore = props.setScore;\r\n\r\n    const inputBox = useRef(null);\r\n\r\n    const setTopBarPercent = props.setTopBarPercent;\r\n\r\n    const [startTimestamp, setStartTimestamp] = useState(Date.now());\r\n\r\n    const [question, setQuestion] = useState({\r\n        \"title\": \"\",\r\n        \"unit\": \"\",\r\n        \"answer\": \"\",\r\n        \"tolerance\": 0\r\n    });\r\n\r\n    function getUnitCombination(unit){\r\n        // try eliminating units recursively\r\n        if(arrayEquals(unit, [0, 0, 0, 0, 0, 0, 0])){\r\n            console.log(\"base case\");\r\n            return [new Map(), 1.0];\r\n        }\r\n        // gameData.units.forEach(x => {\r\n        var possibleUnits = [];\r\n        for(var i = 0; i < gameData.units.length; i++){\r\n            var x = gameData.units[i];\r\n            var xunit = parseUnit(x.unit);\r\n            console.log(\"xunit, unit\");\r\n            console.log(xunit, unit);\r\n            if(arrayContains(xunit, unit)){\r\n                console.log(\"contains pass\");\r\n                for(var j = 0; j < 7; j++){\r\n                    if(unit[j] !== 0 && unit[j] % xunit[j] === 0){\r\n                        console.log(\"j=\" + j);\r\n                        var power = unit[j] / xunit[j];\r\n                        var subtractedUnit = arrayMinus(unit, arrayScalarMult(xunit, power));\r\n                        console.log(subtractedUnit);\r\n                        const [u, factor] = getUnitCombination(subtractedUnit);\r\n                        console.log(\"u, factor\");\r\n                        console.log(u, factor);\r\n                        var rf = u;\r\n                        rf.set(x, power);\r\n                        // console.log(\"unit, rf\");\r\n                        // console.log(unit, rf);\r\n                        console.log(unit + \" -> \" + subtractedUnit);\r\n                        possibleUnits.push([rf, factor * Math.pow(x.value, power)]);\r\n                        // return [rf, factor * Math.pow(x.value, power)];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // return [new Map(), 1.0];\r\n        if(possibleUnits.length > 0){\r\n            return possibleUnits[rand(possibleUnits.length)];\r\n        }\r\n        return [undefined, undefined];\r\n    }\r\n\r\n    function getExponent(exp){\r\n        switch(exp){\r\n            case 1: return \"\";\r\n            case 2: return \" squared\";\r\n            case 3: return \" cubed\";\r\n            default: return \" to the power of \" + exp;\r\n        }\r\n    }\r\n\r\n    function nameUnit(u){\r\n        var positiveBaseUnits = [];\r\n        var negativeBaseUnits = [];\r\n        for(var i = 0; i < gameData.units.length; i++){\r\n            if(u.has(gameData.units[i])){\r\n                if(u.get(gameData.units[i]) > 0){\r\n                    positiveBaseUnits.push({\"unit\": gameData.units[i], \"multiplier\": u.get(gameData.units[i])});\r\n                }\r\n                else{\r\n                    negativeBaseUnits.push({\"unit\": gameData.units[i], \"multiplier\": u.get(gameData.units[i])});\r\n                }\r\n            }\r\n        }\r\n\r\n        var out = \"\";\r\n        for(var i = 0; i < positiveBaseUnits.length; i++){\r\n            var b = positiveBaseUnits[i];\r\n            if(i != positiveBaseUnits.length - 1){\r\n                out += b.unit.name;\r\n                out += getExponent(b.multiplier);\r\n                out += \"-\";\r\n            }\r\n            else{\r\n                out += b.unit.plural;\r\n                out += getExponent(b.multiplier);\r\n            }\r\n        }\r\n\r\n        if(negativeBaseUnits.length > 0){\r\n            out += \" per \";\r\n            for(var i = 0; i < negativeBaseUnits.length; i++){\r\n                var b = negativeBaseUnits[i];\r\n                if(i != negativeBaseUnits.length - 1){\r\n                    out += b.unit.name;\r\n                    out += getExponent(-b.multiplier);\r\n                    out += \"-\";\r\n                }\r\n                else{\r\n                    out += b.unit.name;\r\n                    out += getExponent(-b.multiplier);\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    useEffect(() => {\r\n        var quantity = gameData.quantities[rand(gameData.quantities.length)];\r\n        // var unit = gameData.units[rand(gameData.units.length)];\r\n        console.log(parseUnit(quantity.unit));\r\n        const [u, factor] = getUnitCombination(parseUnit(quantity.unit));\r\n        console.log(u, factor);\r\n        var unit = nameUnit(u);\r\n        setQuestion({\r\n            \"title\": quantity.name,\r\n            \"unit\": unit,\r\n            \"answer\": quantity.value / factor,\r\n            \"tolerance\": 10\r\n        });\r\n    }, []);\r\n\r\n    function validateAnswer(userAnswer){\r\n        // var userAnswer = parseFloat(answerInput) * 10 ** parseFloat(exponentInput);\r\n        var lowerBound = question.answer / question.tolerance;\r\n        var upperBound = question.answer * question.tolerance;\r\n        console.log(lowerBound);\r\n        console.log(upperBound);\r\n        console.log(userAnswer);\r\n        var correct = lowerBound <= userAnswer && userAnswer <= upperBound;\r\n        if(correct){\r\n            setScore(score + 1);\r\n        }\r\n        return correct;\r\n    }\r\n\r\n    function handleInputKeyDown(e){\r\n        if(e.key === \"Enter\"){\r\n            var userAnswer = (answerInput === \"\" ? 1 : answerInput) * Math.pow(10, (exponentInput === \"\" ? 0 : exponentInput));\r\n            var correct = validateAnswer(userAnswer);\r\n            setAnswerProps({\r\n                \"userAnswer\": userAnswer,\r\n                \"correctAnswer\": question.answer,\r\n                \"tolerance\": question.tolerance,\r\n                \"correct\": correct,\r\n                \"outOfTime\": false\r\n            });\r\n            setGameState(2);\r\n            // changeQuestion();\r\n            // setAnswerInput(\"\");\r\n        }\r\n    }\r\n\r\n    function outOfTime(){\r\n        var correct = validateAnswer();\r\n        setAnswerProps({\r\n            \"userAnswer\": NaN,\r\n            \"correctAnswer\": question.answer,\r\n            \"tolerance\": question.tolerance,\r\n            \"correct\": correct,\r\n            \"outOfTime\": true\r\n        });\r\n        setGameState(2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        inputBox.current.focus();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            var millis = 15000 - Date.now() + startTimestamp;\r\n            if(millis < 0){\r\n                outOfTime();\r\n            }\r\n            setTopBarPercent(millis / 15000);\r\n        }, 30);\r\n    });\r\n\r\n    return(\r\n        <div id=\"game\">\r\n            <center>\r\n                <p>{question.title} in {question.unit}</p>\r\n                <input\r\n                    ref={inputBox}\r\n                    type=\"text\"\r\n                    value={answerInput}\r\n                    onChange={(e) => setAnswerInput(e.target.value)}\r\n                    onKeyDown={handleInputKeyDown}\r\n                />\r\n                ×10^\r\n                <input\r\n                    type=\"text\"\r\n                    value={exponentInput}\r\n                    onChange={(e) => setExponentInput(e.target.value)}\r\n                    onKeyDown={handleInputKeyDown}\r\n                />\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameEstimate;\r\n","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport './GameAnswer.css';\r\n\r\n\r\nfunction GameAnswer(props) {\r\n\r\n    const [enterKeyUp, setEnterKeyUp] = useState(false);\r\n\r\n    const answerProps = props.answerProps;\r\n    const score = props.score;\r\n    const setGameState = props.setGameState;\r\n\r\n    function downHandler({key}) {\r\n        if (key === \"Enter\") {\r\n            if(enterKeyUp){\r\n                setGameState(1);\r\n            }\r\n        }\r\n    }\r\n\r\n    function upHandler({key}) {\r\n        if (key === \"Enter\") {\r\n            setEnterKeyUp(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', downHandler);\r\n        window.addEventListener('keyup', upHandler)\r\n        return () => {\r\n          window.removeEventListener('keydown', downHandler);\r\n          window.removeEventListener('keyup', upHandler);\r\n        };\r\n    }, [enterKeyUp]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    // upThreshold/downThreshold: order of magnitude to use scientific\r\n    function formatNumber(number, precision, upThreshold, downThreshold) {\r\n        number = Number(number.toPrecision(precision));\r\n        if(number < Math.pow(10, downThreshold) || number >= Math.pow(10, upThreshold)){\r\n            var oom = Math.floor(Math.log(number) / Math.log(10));\r\n            var magnitude = (number / Math.pow(10, oom)).toPrecision(precision);\r\n            return magnitude + \"e\" + oom;\r\n        }\r\n        return number;\r\n    }\r\n    \r\n    return(\r\n        <center>\r\n            <p className=\"bigText\">\r\n                {answerProps.outOfTime ? \"Out of Time!\" : (answerProps.correct ? \"Correct!\" : \"Incorrect!\")}\r\n            </p>\r\n            <p className=\"bodyText\">\r\n                {\"Correct answer: \" + formatNumber(answerProps.correctAnswer, 5, 6, -3)}\r\n            </p>\r\n            <p className=\"bodyText\" style={{\"display\": (answerProps.outOfTime ? \"none\" : \"initial\")}}>\r\n                {\"Your answer: \" + formatNumber(answerProps.userAnswer, 5, 6, -3)}\r\n            </p>\r\n            <p className=\"bodyText\">\r\n                {\"Tolerance: \" + answerProps.tolerance}\r\n            </p>\r\n            <p className=\"bodyText\">\r\n                {\"Score: \" + score}\r\n            </p>\r\n            <p id=\"continueMsg\">\r\n                Press enter to continue\r\n            </p>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default GameAnswer;\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport GameEstimate from './GameEstimate.js';\r\nimport GameAnswer from './GameAnswer.js';\r\nimport './Game.css';\r\n\r\nfunction Game(props) {\r\n\r\n    const [gameState, setGameState] = useState(1);\r\n\r\n    const [answerProps, setAnswerProps] = useState({\r\n        \"userAnswer\": null,\r\n        \"correctAnswer\": null,\r\n        \"tolerance\": null,\r\n        \"correct\": null\r\n    });\r\n\r\n    const [score, setScore] = useState(0);\r\n\r\n    const setTopBarPercent = props.setTopBarPercent;\r\n    \r\n    function renderWindow(){\r\n        switch(gameState){\r\n            case 0:\r\n            case 1:\r\n                return <GameEstimate\r\n                            setGameState={setGameState}\r\n                            setAnswerProps={setAnswerProps} \r\n                            score={score}\r\n                            setScore={setScore}\r\n                            setTopBarPercent={setTopBarPercent}\r\n                        />\r\n            case 2:\r\n                setTopBarPercent(0);\r\n                return <GameAnswer\r\n                            setGameState={setGameState}\r\n                            answerProps={answerProps}\r\n                            score={score}\r\n                        />\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"game-wrapper\">\r\n            {renderWindow()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport './TopBar.css';\r\n\r\nfunction TopBar(props) {\r\n\r\n    const topBarPercent = props.topBarPercent;\r\n\r\n    const topBarStyle = {\r\n        width: topBarPercent * 100 + \"%\"\r\n    };\r\n\r\n    return (\r\n        <div id=\"bar-wrapper\">\r\n            <div id=\"bar\" style={topBarStyle}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopBar;\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Game from './Game.js';\r\nimport TopBar from './TopBar.js';\r\n\r\nfunction App() {\r\n    const [topBarPercent, setTopBarPercent] = useState(0.5)\r\n    return (\r\n        <div id=\"window\">\r\n            <TopBar\r\n                topBarPercent={topBarPercent}\r\n            />\r\n            <Game\r\n                setTopBarPercent={setTopBarPercent}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}